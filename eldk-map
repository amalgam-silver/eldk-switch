#!/bin/bash

DATA=`dirname $0`/eldk-map.dat

usage () {
    echo "usage: `basename $0` <from> <to> <key>"				1>&2
    echo "	The table { <from>, <to> } is queried for <from> = <key>"	1>&2
    echo "	where <from> and <to> are fieldnames."				1>&2
    echo "       `basename $0` <column>"					1>&2
    echo "	Lists all possible values for <column> where"			1>&2
    echo "	<column> is a fieldname."					1>&2
    echo "	Valid field names: 'board', 'cpu', 'eldkcc', 'alias'"		1>&2
    echo "	(can be abbreviated as 'b', 'c', 'e', 'a')"			1>&2
    echo ""									1>&2
    echo "	Examples:"							1>&2
    echo "	eldk-map c b ppc440epx  - show all boards using 440EPx"		1>&2
    echo "	eldk-map e b ppc_8xx    - show all boards using ppc_8xx-"	1>&2
    echo "	  as CROSS_COMPILE."						1>&2
    echo "	eldk-map c              - show all known CPUs"			1>&2
    exit 1
}

toupper () {
    echo $1 | tr 'a-z' 'A-Z'
}

tolower () {
    echo $1 | tr 'A-Z' 'a-z'
}

# Get a section from our datafile
get_section () {
    sed -n '/:section '$1':/I,/:section/I {s/#.*//; /^$/d; p}' < $DATA
}

# Map a board to its cpu
board_to_cpu () {
    get_section board_to_cpu | sed -n '/^'"$1"'/I { s/^.*[ \t]\+\(.\+\)$/\1/ ; p ; q }'
}

# Map a cpu to all boards using it
cpu_to_board () {
    get_section board_to_cpu | sed -n '/[ \t]\+'"$1"'$/I { s/^\(.\+\)[ \t]\+.*$/\1/ ; p }'
}

# Enumerate a column over the whole table
enum_board_cpu () {
    get_section board_to_cpu | sed 's/^\(.\+\)[ \t]\+\(.\+\)$/\'"$1"'/'
}

# Map a CPU to its ELDK architecture
cpu_to_eldkcc () {
    get_section cpu_to_eldkcc | sed -n '/^'"$1"'/I { s/^.*[ \t]\+\(.\+\)$/\1/ ; p ; q }'
}

# Map an ELDK architecture to all CPUs using it
eldkcc_to_cpu () {
    get_section cpu_to_eldkcc | sed -n '/[ \t]\+'"$1"'$/I { s/^\(.\+\)[ \t]\+.*$/\1/ ; p }'
}

# Enumerate a column over the whole table
enum_cpu_eldkcc () {
    get_section cpu_to_eldkcc | sed 's/^\(.\+\)[ \t]\+\(.\+\)$/\'"$1"'/'
}

# Map an alias to ELDK architecture
alias_to_eldkcc () {
    get_section alias_to_eldkcc | sed -n '/^'"$1"'/I { s/^.*[ \t]\+\(.\+\)$/\1/ ; p ; q }'
}

# Enumerate a column over the whole table
enum_alias_eldkcc () {
    get_section alias_to_eldkcc | sed 's/^\(.\+\)[ \t]\+\(.\+\)$/\'"$1"'/'
}

if [ $# -eq 1 ]
then
    # Lookup all values
    column=$(tolower $1)
    case ${column:0:1} in
	a)	enum_alias_eldkcc 1 | sort | uniq ;;
	b)      enum_board_cpu 1 | sort | uniq ;;
	c)	enum_cpu_eldkcc 1 | sort | uniq ;;
	e)      enum_cpu_eldkcc 2 | sort | uniq ;;
	v)	
	    for cpu in `enum_board_cpu 2` ; do
	    	if [ -z `cpu_to_eldkcc $(toupper $cpu)` ] ; then
		    echo "Unknown CPU: $cpu" 1>&2
		fi
	    done ;;
	*)	echo "$0: unknown column $1" 1>&2 ; exit 1 ;;
    esac
elif [ $# -eq 3 ]
then
    # Map a $key through a table
    from=$(tolower $1)
    to=$(tolower $2)
    key=$(toupper $3)

    case "${from:0:1},${to:0:1}" in
	a,e)    alias_to_eldkcc $key ;;
	b,c)	board_to_cpu $key ;;
	c,e)	cpu_to_eldkcc $key ;;
	c,b)	cpu_to_board $key ;;
	e,c)	eldkcc_to_cpu $key ;;
	e,b)
	    for cpu in `eldkcc_to_cpu $key` ; do
		cpu_to_board $(toupper $cpu)
	    done ;;
	*)  echo "$0: unknown lookup operation $from -> $to" 1>&2
	    exit 1 ;;
    esac
else
    usage
fi
